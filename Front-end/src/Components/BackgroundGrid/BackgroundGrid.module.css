.slider {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 100px;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  margin: 0;
  padding: 0;
  background-color: #1a1a1a; /* Adicionado para melhor visualização do fundo */
}

.column {
  width: 500px;
  height: 100%; /* Ocupa a altura total do slider */
  position: relative;
  overflow: hidden; /* Garante que os itens fora da coluna não sejam visíveis */
}

.list {
  position: absolute;
  width: 100%;
  height: 100%;
}

.skewFix {
  overflow: hidden;
  height: 100%;
  width: 100%;
}

/* Definindo variáveis CSS para altura do item */
:root {
  --item-height: 200px;
  --item-margin-bottom: 20px;
  --total-item-height: calc(var(--item-height) + var(--item-margin-bottom));
}

.container {
  height: var(--item-height);
  width: 100%;
  margin-bottom: var(--item-margin-bottom);
  background-color: rgba(0, 0, 0, 0.2);
  border: 1px solid #333;
  display: flex;
  justify-content: center;
  align-items: center;
}

.content {
  height: 100%;
  width: 100%;
  background-color: #555;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
  font-size: 2em;
  font-weight: bold;
}

.item {
  position: absolute;
  left: 0;
  width: 100%;
  height: var(--item-height);
  top: 0; /* Começa no topo da coluna e é movido pela animação */
  animation: verticalRun 20s linear infinite;
  animation-delay: calc(
    (20s / var(--quantity)) * (var(--position) - 1)
  ); /* '--quantity' e '--position' vêm do JS */
}

/* Animação de descida */
@keyframes verticalRun {
  0% {
    transform: translateY(
      100%
    ); /* Começa 100% abaixo da altura do container da coluna */
  }
  100% {
    transform: translateY(
      calc(-1 * var(--total-item-height) * var(--quantity))
    ); /* Termina acima, para criar o loop */
  }
}

/* Animação de subida (reversa) */
.reverse .item {
  animation: verticalRunReverse 20s linear infinite;
  animation-delay: calc(
    (20s / var(--quantity)) * (var(--position) - 1)
  ); /* Mantém o delay */
}

@keyframes verticalRunReverse {
  0% {
    transform: translateY(
      calc(-1 * var(--total-item-height) * var(--quantity))
    ); /* Começa acima */
  }
  100% {
    transform: translateY(
      100%
    ); /* Termina 100% abaixo, para criar o loop */
  }
}